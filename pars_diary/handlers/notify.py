"""–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏.

- –í–∫–ª./–û—Ç–∫–ª. —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
- –í–∫–ª./–û—Ç–∫–ª. —É–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""

from aiogram import F, Router
from aiogram.filters import Command
from aiogram.types import (
    CallbackQuery,
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    Message,
)

from pars_diary.types import User
from pars_diary.utils import db
from pars_diary.utils.keyboards import not_auth_keyboard
from pars_diary.utils.messages import not_auth

router = Router(name=__name__)


@router.callback_query(F.data == "n_n")
@router.callback_query(F.data == "n_s")
@router.message(Command("notify"))
async def notify_msg(msg: Message, user: User) -> None:
    """–û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ /notify (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π)."""
    if isinstance(msg, CallbackQuery):
        method = msg.message.edit_text

        if msg.data == "n_n":
            db.swith_notify(msg.from_user.id)
        elif msg.data == "n_s":
            db.swith_notify(msg.from_user.id, "s")

    else:
        method = msg.answer

    if user.is_auth:
        await method(
            (
                "‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:</b>\n\n"
                "–í –±–æ—Ç–µ –µ—Å—Ç—å 2 –≤–∏–¥–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:\n\n"
                "üîî <b>–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –æ—Ü–µ–Ω–æ–∫</b>\n\n"
                "üîî <b>–£–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è</b> - "
                "—É–Ω–∏–∫–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –æ—Ü–µ–Ω–æ–∫ "
                "–∏ –ø—Ä–æ—Å—Ç—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, –Ω–∞–ø—Ä–∏–º–µ—Ä:\n\n"
                "<blockquote>–°–ø–æ—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–µ,"
                "–Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å, –∏–Ω–∞—á–µ –º–æ–∂–µ—Ç –≤—ã–π—Ç–∏ 4!\n\n"
                "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /notify\n"
                "</blockquote>\n"
                "–∏–ª–∏\n\n"
                "<blockquote>–í–∞–º –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤—Å–µ–≥–æ 0.25 –±–∞–ª–ª–∞ "
                "–¥–æ –æ—Ü–µ–Ω–∫–∏ 5, —Å—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è!\n"
                "–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /notify\n"
                "</blockquote>"
            ),
            reply_markup=InlineKeyboardMarkup(
                inline_keyboard=[
                    [
                        InlineKeyboardButton(
                            text="‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å (–æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö)"
                            if db.get_notify(msg.from_user.id)
                            else "‚úÖ –í–∫–ª—é—á–∏—Ç—å (–æ –Ω–æ–≤—ã—Ö –æ—Ü–µ–Ω–∫–∞—Ö)",
                            callback_data="n_n",
                        ),
                    ],
                    [
                        InlineKeyboardButton(
                            text="‚ùå –û—Ç–∫–ª—é—á–∏—Ç—å (—É–º–Ω—ã–µ)"
                            if db.get_notify(msg.from_user.id, index="s")
                            else "‚úÖ –í–∫–ª—é—á–∏—Ç—å (—É–º–Ω—ã–µ)",
                            callback_data="n_s",
                        ),
                    ],
                    [
                        InlineKeyboardButton(
                            text="–û–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è",
                            url="https://t.me/mili_sp_bot",
                        ),
                    ],
                ],
            ),
        )

    else:
        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ —Ä–µ–≥–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        await msg.answer(
            not_auth,
            reply_markup=not_auth_keyboard,
        )
